{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React projects (beginners)\\\\personalisedmoviereviews\\\\src\\\\components\\\\DarkModeToggle.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DarkModeToggle = () => {\n  _s();\n  const [darkMode, setDarkMode] = useState(false);\n  useEffect(() => {\n    // Check local storage for dark mode preference\n    const savedDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\n    setDarkMode(savedDarkMode);\n    document.documentElement.classList.toggle(\"dark\", savedDarkMode);\n  }, []);\n  const handleToggle = () => {\n    setDarkMode(prevMode => {\n      const newMode = !prevMode;\n      localStorage.setItem(\"darkMode\", newMode);\n      document.documentElement.classList.toggle(\"dark\", newMode);\n      return newMode;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleToggle,\n    className: \"p-2 rounded bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100\",\n    children: darkMode ? \"ðŸŒ™ Dark Mode\" : \"ðŸŒž Light Mode\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(DarkModeToggle, \"n2P3coCVngntCnyS/Nqj+dgR7+U=\");\n_c = DarkModeToggle;\nexport default DarkModeToggle;\nvar _c;\n$RefreshReg$(_c, \"DarkModeToggle\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","DarkModeToggle","_s","darkMode","setDarkMode","savedDarkMode","localStorage","getItem","document","documentElement","classList","toggle","handleToggle","prevMode","newMode","setItem","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/React projects (beginners)/personalisedmoviereviews/src/components/DarkModeToggle.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst DarkModeToggle = () => {\r\n  const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check local storage for dark mode preference\r\n    const savedDarkMode = localStorage.getItem(\"darkMode\") === \"true\";\r\n    setDarkMode(savedDarkMode);\r\n    document.documentElement.classList.toggle(\"dark\", savedDarkMode);\r\n  }, []);\r\n\r\n  const handleToggle = () => {\r\n    setDarkMode((prevMode) => {\r\n      const newMode = !prevMode;\r\n      localStorage.setItem(\"darkMode\", newMode);\r\n      document.documentElement.classList.toggle(\"dark\", newMode);\r\n      return newMode;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleToggle}\r\n      className=\"p-2 rounded bg-gray-200 dark:bg-gray-700 text-gray-900 dark:text-gray-100\"\r\n    >\r\n      {darkMode ? \"ðŸŒ™ Dark Mode\" : \"ðŸŒž Light Mode\"}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default DarkModeToggle;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,aAAa,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,KAAK,MAAM;IACjEH,WAAW,CAACC,aAAa,CAAC;IAC1BG,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEN,aAAa,CAAC;EAClE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACzBR,WAAW,CAAES,QAAQ,IAAK;MACxB,MAAMC,OAAO,GAAG,CAACD,QAAQ;MACzBP,YAAY,CAACS,OAAO,CAAC,UAAU,EAAED,OAAO,CAAC;MACzCN,QAAQ,CAACC,eAAe,CAACC,SAAS,CAACC,MAAM,CAAC,MAAM,EAAEG,OAAO,CAAC;MAC1D,OAAOA,OAAO;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA;IACEgB,OAAO,EAAEJ,YAAa;IACtBK,SAAS,EAAC,2EAA2E;IAAAC,QAAA,EAEpFf,QAAQ,GAAG,cAAc,GAAG;EAAe;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEb,CAAC;AAACpB,EAAA,CA3BID,cAAc;AAAAsB,EAAA,GAAdtB,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}