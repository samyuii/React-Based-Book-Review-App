{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { debounce } from \"lodash\"; // Ensure you have lodash installed\n\nconst KEY = \"f84fc31d\";\nexport function useMovies(query) {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const fetchMovies = debounce(async () => {\n    try {\n      setIsLoading(true);\n      setError(\"\");\n      const res = await fetch(`http://www.omdbapi.com/?apikey=${KEY}&s=${query}`);\n      if (!res.ok) throw new Error(\"Something went wrong with fetching movies\");\n      const data = await res.json();\n      if (data.Response === \"False\") throw new Error(\"Movie not found\");\n      setMovies(data.Search);\n      setError(\"\");\n    } catch (err) {\n      console.error(err.message);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, 500);\n  useEffect(() => {\n    if (query.length < 3) {\n      setMovies([]);\n      setError(\"\");\n      return;\n    }\n    fetchMovies();\n  }, [query]);\n  return {\n    movies,\n    isLoading,\n    error\n  };\n}\n_s(useMovies, \"U+znDQTK7eje4cwlxt5gS2qHcHc=\");","map":{"version":3,"names":["useState","useEffect","debounce","KEY","useMovies","query","_s","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMovies","res","fetch","ok","Error","data","json","Response","Search","err","console","message","length"],"sources":["D:/Projects/React projects (beginners)/07-usepopcorn/final/src/useMovies.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { debounce } from \"lodash\"; // Ensure you have lodash installed\n\nconst KEY = \"f84fc31d\";\n\nexport function useMovies(query) {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const fetchMovies = debounce(async () => {\n    try {\n      setIsLoading(true);\n      setError(\"\");\n      const res = await fetch(\n        `http://www.omdbapi.com/?apikey=${KEY}&s=${query}`\n      );\n\n      if (!res.ok) throw new Error(\"Something went wrong with fetching movies\");\n\n      const data = await res.json();\n\n      if (data.Response === \"False\") throw new Error(\"Movie not found\");\n\n      setMovies(data.Search);\n      setError(\"\");\n    } catch (err) {\n      console.error(err.message);\n      setError(err.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, 500);\n\n  useEffect(() => {\n    if (query.length < 3) {\n      setMovies([]);\n      setError(\"\");\n      return;\n    }\n    fetchMovies();\n  }, [query]);\n\n  return { movies, isLoading, error };\n}\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,QAAQ,QAAQ,QAAQ,CAAC,CAAC;;AAEnC,MAAMC,GAAG,GAAG,UAAU;AAEtB,OAAO,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC/B,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMa,WAAW,GAAGX,QAAQ,CAAC,YAAY;IACvC,IAAI;MACFQ,YAAY,CAAC,IAAI,CAAC;MAClBE,QAAQ,CAAC,EAAE,CAAC;MACZ,MAAME,GAAG,GAAG,MAAMC,KAAK,CACpB,kCAAiCZ,GAAI,MAAKE,KAAM,EAAC,CACnD;MAED,IAAI,CAACS,GAAG,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;MAEzE,MAAMC,IAAI,GAAG,MAAMJ,GAAG,CAACK,IAAI,EAAE;MAE7B,IAAID,IAAI,CAACE,QAAQ,KAAK,OAAO,EAAE,MAAM,IAAIH,KAAK,CAAC,iBAAiB,CAAC;MAEjET,SAAS,CAACU,IAAI,CAACG,MAAM,CAAC;MACtBT,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,CAAC,OAAOU,GAAG,EAAE;MACZC,OAAO,CAACZ,KAAK,CAACW,GAAG,CAACE,OAAO,CAAC;MAC1BZ,QAAQ,CAACU,GAAG,CAACE,OAAO,CAAC;IACvB,CAAC,SAAS;MACRd,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,GAAG,CAAC;EAEPT,SAAS,CAAC,MAAM;IACd,IAAII,KAAK,CAACoB,MAAM,GAAG,CAAC,EAAE;MACpBjB,SAAS,CAAC,EAAE,CAAC;MACbI,QAAQ,CAAC,EAAE,CAAC;MACZ;IACF;IACAC,WAAW,EAAE;EACf,CAAC,EAAE,CAACR,KAAK,CAAC,CAAC;EAEX,OAAO;IAAEE,MAAM;IAAEE,SAAS;IAAEE;EAAM,CAAC;AACrC;AAACL,EAAA,CAvCeF,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}