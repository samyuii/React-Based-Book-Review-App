{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React projects (beginners)\\\\personalisedmoviereviews\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { useLocalStorageState } from \"../hooks/useLocalStorageState\";\nimport { BookHaven } from \"../hooks/useBooks\";\nimport { useDebounce } from \"../hooks/useDebounce\";\nimport Search from \"../components/Search\";\nimport BookList from \"../components/BookList\";\nimport BookOverlay from \"../components/BookOverlay\";\nimport Loader from \"../components/Loader\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [query, setQuery] = useState(\"\");\n  const [selectedId, setSelectedId] = useState(null);\n  const debouncedQuery = useDebounce(query, 500);\n  const {\n    books,\n    isLoading,\n    error\n  } = BookHaven(debouncedQuery);\n  const [read, setRead] = useLocalStorageState([], \"read\");\n  const handleSelectBook = id => {\n    setSelectedId(selectedId => id === selectedId ? null : id);\n  };\n  const handleAddRead = book => {\n    setRead(prevRead => {\n      if (!prevRead.some(b => b.id === book.id)) {\n        const updatedRead = [...prevRead, book];\n        localStorage.setItem(\"read\", JSON.stringify(updatedRead));\n        return updatedRead;\n      }\n      return prevRead;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value),\n      placeholder: \"Search for books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(BookList, {\n      books: books,\n      onSelectBook: handleSelectBook\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), selectedId && /*#__PURE__*/_jsxDEV(BookOverlay, {\n      selectedId: selectedId,\n      onCloseBook: () => setSelectedId(null),\n      onAddRead: handleAddRead,\n      read: read\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"1dxOVdnYJ0rHyQx/FgrigTwajsA=\", false, function () {\n  return [useDebounce, useLocalStorageState];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useState","useEffect","useLocalStorageState","BookHaven","useDebounce","Search","BookList","BookOverlay","Loader","ErrorMessage","jsxDEV","_jsxDEV","Home","_s","query","setQuery","selectedId","setSelectedId","debouncedQuery","books","isLoading","error","read","setRead","handleSelectBook","id","handleAddRead","book","prevRead","some","b","updatedRead","localStorage","setItem","JSON","stringify","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onSelectBook","onCloseBook","onAddRead","_c","$RefreshReg$"],"sources":["D:/Projects/React projects (beginners)/personalisedmoviereviews/src/pages/Home.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { useLocalStorageState } from \"../hooks/useLocalStorageState\";\r\nimport { BookHaven } from \"../hooks/useBooks\";\r\nimport { useDebounce } from \"../hooks/useDebounce\";\r\nimport Search from \"../components/Search\";\r\nimport BookList from \"../components/BookList\";\r\nimport BookOverlay from \"../components/BookOverlay\";\r\nimport Loader from \"../components/Loader\";\r\nimport ErrorMessage from \"../components/ErrorMessage\";\r\n\r\nconst Home = () => {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [selectedId, setSelectedId] = useState(null);\r\n  const debouncedQuery = useDebounce(query, 500);\r\n  const { books, isLoading, error } = BookHaven(debouncedQuery);\r\n  const [read, setRead] = useLocalStorageState([], \"read\");\r\n\r\n  const handleSelectBook = (id) => {\r\n    setSelectedId((selectedId) => (id === selectedId ? null : id));\r\n  };\r\n\r\n  const handleAddRead = (book) => {\r\n    setRead((prevRead) => {\r\n      if (!prevRead.some((b) => b.id === book.id)) {\r\n        const updatedRead = [...prevRead, book];\r\n        localStorage.setItem(\"read\", JSON.stringify(updatedRead));\r\n        return updatedRead;\r\n      }\r\n      return prevRead;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}\r\n        placeholder=\"Search for books\"\r\n      />\r\n      {isLoading && <p>Loading...</p>}\r\n      {error && <p>{error}</p>}\r\n      <BookList books={books} onSelectBook={handleSelectBook} />\r\n      {selectedId && (\r\n        <BookOverlay\r\n          selectedId={selectedId}\r\n          onCloseBook={() => setSelectedId(null)}\r\n          onAddRead={handleAddRead}\r\n          read={read}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}