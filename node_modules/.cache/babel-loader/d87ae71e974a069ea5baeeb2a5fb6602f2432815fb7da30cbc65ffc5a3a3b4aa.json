{"ast":null,"code":"// import { useEffect, useRef, useState } from \"react\";\n// import StarRating from \"./StarRating\";\n// import { useKey } from \"../hooks/useKey\";\n\n// export default function BookOverlay({\n//   selectedId,\n//   onCloseBook,\n//   onAddRead,\n//   read,\n// }) {\n//   const [book, setBook] = useState({});\n//   const [isLoading, setIsLoading] = useState(false);\n//   const [userRating, setUserRating] = useState(0);\n\n//   const countRef = useRef(0);\n\n//   useEffect(() => {\n//     if (userRating) countRef.current++;\n//   }, [userRating]);\n\n//   const isRead = read.some((book) => book.id === selectedId);\n//   const readUserRating =\n//     read.find((book) => book.id === selectedId)?.userRating || 0;\n\n//   const {\n//     title,\n//     publishedDate,\n//     imageLinks,\n//     pageCount,\n//     averageRating,\n//     description,\n//     authors,\n//   } = book.volumeInfo || {};\n\n//   function handleAdd() {\n//     const newReadBook = {\n//       id: selectedId,\n//       title,\n//       publishedDate,\n//       imageLinks,\n//       pageCount,\n//       averageRating: Number(averageRating),\n//       userRating,\n//       countRatingDecisions: countRef.current,\n//     };\n//     onAddRead(newReadBook);\n//     onCloseBook();\n//   }\n\n//   useEffect(() => {\n//     async function fetchBookDetails() {\n//       setIsLoading(true);\n//       const res = await fetch(\n//         `https://www.googleapis.com/books/v1/volumes/${selectedId}`\n//       );\n//       const data = await res.json();\n//       setBook(data);\n//       setIsLoading(false);\n//     }\n//     fetchBookDetails();\n//   }, [selectedId]);\n\n//   useEffect(() => {\n//     if (!title) return;\n//     document.title = `Book | ${title}`;\n//     return () => {\n//       document.title = \"useBooks\";\n//     };\n//   }, [title]);\n\n//   useKey(\"Escape\", onCloseBook);\n\n//   return (\n//     <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\n//       <div className=\"bg-white p-4 rounded shadow-lg w-full max-w-3xl mx-4\">\n//         {isLoading ? (\n//           <p className=\"text-center text-gray-600\">Loading...</p>\n//         ) : (\n//           <div className=\"space-y-4\">\n//             <header className=\"flex items-center justify-between\">\n//               <h2 className=\"text-xl font-bold\">{title}</h2>\n//               <button\n//                 className=\"text-gray-600 hover:text-gray-900 transition duration-200\"\n//                 onClick={onCloseBook}\n//               >\n//                 &times;\n//               </button>\n//             </header>\n//             <div className=\"flex space-x-4\">\n//               <img\n//                 className=\"w-1/3 h-auto rounded\"\n//                 src={imageLinks?.thumbnail}\n//                 alt={`${title} cover`}\n//               />\n//               <div className=\"flex-1 space-y-2\">\n//                 <p className=\"text-gray-600\">{description}</p>\n//                 <p className=\"text-gray-600\">\n//                   <span>üë©‚Äçüíª</span>\n//                   <span>{authors?.join(\", \")}</span>\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span>üóì</span>\n//                   <span>{publishedDate}</span>\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span>‚è≥</span>\n//                   <span>{pageCount} pages</span>\n//                 </p>\n//                 <p className=\"text-gray-600\">\n//                   <span>‚≠êÔ∏è</span>\n//                   <span>{averageRating || \"N/A\"}</span>\n//                 </p>\n//                 <div className=\"mt-4\">\n//                   {!isRead ? (\n//                     <>\n//                       <StarRating\n//                         maxRating={5}\n//                         size={24}\n//                         onSetRating={setUserRating}\n//                       />\n//                       {userRating > 0 && (\n//                         <button\n//                           className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition duration-200\"\n//                           onClick={handleAdd}\n//                         >\n//                           + Add to list\n//                         </button>\n//                       )}\n//                     </>\n//                   ) : (\n//                     <p>\n//                       You rated this book {readUserRating} ‚≠êÔ∏è (\n//                       {countRef.current} rating decisions)\n//                     </p>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["D:/Projects/React projects (beginners)/personalisedmoviereviews/src/components/BookOverlay.js"],"sourcesContent":["// import { useEffect, useRef, useState } from \"react\";\r\n// import StarRating from \"./StarRating\";\r\n// import { useKey } from \"../hooks/useKey\";\r\n\r\n// export default function BookOverlay({\r\n//   selectedId,\r\n//   onCloseBook,\r\n//   onAddRead,\r\n//   read,\r\n// }) {\r\n//   const [book, setBook] = useState({});\r\n//   const [isLoading, setIsLoading] = useState(false);\r\n//   const [userRating, setUserRating] = useState(0);\r\n\r\n//   const countRef = useRef(0);\r\n\r\n//   useEffect(() => {\r\n//     if (userRating) countRef.current++;\r\n//   }, [userRating]);\r\n\r\n//   const isRead = read.some((book) => book.id === selectedId);\r\n//   const readUserRating =\r\n//     read.find((book) => book.id === selectedId)?.userRating || 0;\r\n\r\n//   const {\r\n//     title,\r\n//     publishedDate,\r\n//     imageLinks,\r\n//     pageCount,\r\n//     averageRating,\r\n//     description,\r\n//     authors,\r\n//   } = book.volumeInfo || {};\r\n\r\n//   function handleAdd() {\r\n//     const newReadBook = {\r\n//       id: selectedId,\r\n//       title,\r\n//       publishedDate,\r\n//       imageLinks,\r\n//       pageCount,\r\n//       averageRating: Number(averageRating),\r\n//       userRating,\r\n//       countRatingDecisions: countRef.current,\r\n//     };\r\n//     onAddRead(newReadBook);\r\n//     onCloseBook();\r\n//   }\r\n\r\n//   useEffect(() => {\r\n//     async function fetchBookDetails() {\r\n//       setIsLoading(true);\r\n//       const res = await fetch(\r\n//         `https://www.googleapis.com/books/v1/volumes/${selectedId}`\r\n//       );\r\n//       const data = await res.json();\r\n//       setBook(data);\r\n//       setIsLoading(false);\r\n//     }\r\n//     fetchBookDetails();\r\n//   }, [selectedId]);\r\n\r\n//   useEffect(() => {\r\n//     if (!title) return;\r\n//     document.title = `Book | ${title}`;\r\n//     return () => {\r\n//       document.title = \"useBooks\";\r\n//     };\r\n//   }, [title]);\r\n\r\n//   useKey(\"Escape\", onCloseBook);\r\n\r\n//   return (\r\n//     <div className=\"fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50\">\r\n//       <div className=\"bg-white p-4 rounded shadow-lg w-full max-w-3xl mx-4\">\r\n//         {isLoading ? (\r\n//           <p className=\"text-center text-gray-600\">Loading...</p>\r\n//         ) : (\r\n//           <div className=\"space-y-4\">\r\n//             <header className=\"flex items-center justify-between\">\r\n//               <h2 className=\"text-xl font-bold\">{title}</h2>\r\n//               <button\r\n//                 className=\"text-gray-600 hover:text-gray-900 transition duration-200\"\r\n//                 onClick={onCloseBook}\r\n//               >\r\n//                 &times;\r\n//               </button>\r\n//             </header>\r\n//             <div className=\"flex space-x-4\">\r\n//               <img\r\n//                 className=\"w-1/3 h-auto rounded\"\r\n//                 src={imageLinks?.thumbnail}\r\n//                 alt={`${title} cover`}\r\n//               />\r\n//               <div className=\"flex-1 space-y-2\">\r\n//                 <p className=\"text-gray-600\">{description}</p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span>üë©‚Äçüíª</span>\r\n//                   <span>{authors?.join(\", \")}</span>\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span>üóì</span>\r\n//                   <span>{publishedDate}</span>\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span>‚è≥</span>\r\n//                   <span>{pageCount} pages</span>\r\n//                 </p>\r\n//                 <p className=\"text-gray-600\">\r\n//                   <span>‚≠êÔ∏è</span>\r\n//                   <span>{averageRating || \"N/A\"}</span>\r\n//                 </p>\r\n//                 <div className=\"mt-4\">\r\n//                   {!isRead ? (\r\n//                     <>\r\n//                       <StarRating\r\n//                         maxRating={5}\r\n//                         size={24}\r\n//                         onSetRating={setUserRating}\r\n//                       />\r\n//                       {userRating > 0 && (\r\n//                         <button\r\n//                           className=\"mt-2 bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700 transition duration-200\"\r\n//                           onClick={handleAdd}\r\n//                         >\r\n//                           + Add to list\r\n//                         </button>\r\n//                       )}\r\n//                     </>\r\n//                   ) : (\r\n//                     <p>\r\n//                       You rated this book {readUserRating} ‚≠êÔ∏è (\r\n//                       {countRef.current} rating decisions)\r\n//                     </p>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}